diff --git a/src/fr-command-7z.c b/src/fr-command-7z.c
index 877d8db..008d34d 100644
--- a/src/fr-command-7z.c
+++ b/src/fr-command-7z.c
@@ -150,6 +150,13 @@ list__process_line (char     *line,
 	if (strcmp (fields[0], "Path") == 0) {
 		fdata->free_original_path = TRUE;
 		fdata->original_path = g_strdup (fields[1]);
+        char iconv[1024];
+        FILE *fp;
+        char buf[strlen(fdata->original_path)+1];
+        sprintf(iconv, "echo $(echo %s | iconv -c -f UTF-8 -t ISO-8859-1) | iconv -c -f EUC-KR -t UTF-8", fdata->original_path);
+        fp = popen(iconv, "r");
+        fgets(buf,sizeof(buf),fp);
+        fdata->original_path = buf;
 		fdata->full_path = g_strconcat ((fdata->original_path[0] != '/') ? "/" : "",
 						fdata->original_path,
 						(fdata->dir && (fdata->original_path[strlen (fdata->original_path) - 1] != '/')) ? "/" : "",
diff --git a/src/fr-window.c b/src/fr-window.c
index bbddde7..8599e70 100644
--- a/src/fr-window.c
+++ b/src/fr-window.c
@@ -2749,12 +2749,38 @@ fr_window_show_confirmation_dialog (FrWindow  *window,
 	gtk_widget_show (dialog);
 }
 
+int delSchar(char *buf, char *a)
+{
+    int n=0, k=0;
+    for(int i=0; buf[i]!='\0'; i++)
+    {
+       if(buf[i]==a[n])
+       {
+           k = i;
+           while(buf[i]==a[n])
+           {
+               if(a[++n]=='\0')
+               {
+                   for(k; buf[k+n]!='\0'; k++)
+                   {
+                       buf[k] = buf[k+n];
+                   }
+                   buf[k]='\0';
+                   return 1;
+               }
+               i++;
+           }
+           n=0;
+           i--;
+       }
+    }
+    return 0;
+}
 
 static void
 fr_window_show_confirmation_dialog_with_open_destination (FrWindow *window)
 {
 	GtkWidget *dialog;
-
 	dialog = _gtk_message_dialog_new (GTK_WINDOW (window),
 					  GTK_DIALOG_MODAL,
 					  _("Extraction completed successfully"),
@@ -2765,6 +2791,156 @@ fr_window_show_confirmation_dialog_with_open_destination (FrWindow *window)
 
 	gtk_dialog_set_default_response (GTK_DIALOG (dialog), GTK_RESPONSE_CLOSE);
 	fr_window_show_confirmation_dialog (window, dialog);
+	char find[256];
+	FILE *fp1;
+	FILE *fp2;
+	FILE *fp3;
+	char buf1[256];
+	char buf2[256]; //to command 'file'
+	char buf3[256]; //changed(iconv)
+	char file[256];
+	char iconv[256];
+	char changedir[256];
+	char targetdir[256];
+	int i;
+	int dir;
+	int moved=0;
+	int changed=0;
+
+	memset(buf1, 0, sizeof(buf1));
+	memset(buf2, 0, sizeof(buf2));
+	memset(buf3, 0, sizeof(buf3));
+	memset(file, 0, sizeof(file));
+	memset(iconv, 0, sizeof(iconv));
+	memset(changedir, 0, sizeof(changedir));
+	memset(find, 0, sizeof(find));
+	memset(targetdir, 0, sizeof(find));
+
+	sprintf(targetdir, "%s", g_file_get_path (window->priv->last_extraction_destination));
+	strcat(targetdir, "_tmpext");
+
+    for (i = 0; i < window->archive->files->len; i++) {
+        FileData *fd = g_ptr_array_index (window->archive->files, i);
+
+		//iconv 'dir' //// 'result' is complete converted dir path
+        gchar *str, *result;
+        gsize len;
+        str = fd->path;
+        len = strlen (str);
+
+        gchar tmp[512];
+		g_strlcpy(tmp, str, len+1);
+		tmp[len]=0;
+        str = g_convert_with_fallback (tmp, len,
+                     "EUC-KR","UTF-8",
+                     NULL, NULL, &len, NULL);
+
+        len = strlen (str);
+        gchar tmp2[512];
+        g_strlcpy(tmp2, str, len+1);
+		tmp2[len]=0;
+        result = g_convert_with_fallback (tmp2, len,
+                     "UTF-8", "ISO-8859-1",
+                     NULL, NULL, &len, NULL);
+
+		//iconv 'file(full_path)' //// 'result_file' is complete converted file full_path
+		gchar *str_file, *result_file;
+		gsize len_file;
+        str_file = fd->full_path;
+        len_file = strlen (str_file);
+
+        gchar tmp_file[512];
+        g_strlcpy(tmp_file, str_file, len_file+1);
+		tmp_file[len_file]=0;
+
+        str_file = g_convert_with_fallback (tmp_file, len_file,
+                     "EUC-KR","UTF-8",
+                     NULL, NULL, &len_file, NULL);
+
+        len_file = strlen (str_file);
+        gchar tmp2_file[512];
+		g_strlcpy(tmp2_file, str_file, len_file+1);
+		tmp2_file[len_file]=0;
+
+        result_file = g_convert_with_fallback (tmp2_file, len_file,
+                     "UTF-8", "ISO-8859-1",
+                     NULL, NULL, &len_file, NULL);
+
+		char moveDestinationDir[1024];
+		sprintf(moveDestinationDir, "%s%s", targetdir, result);
+		char targetFile[1024];
+		sprintf(targetFile, "%s%s", g_file_get_path (window->priv->last_extraction_destination), result_file);
+		printf("targetFile : %s\n", targetFile);
+		targetFile[strlen(targetFile) - 1]='\0';
+		char makedir_cp[1024];
+		sprintf(makedir_cp, "mkdir -p %s && mv -f %s %s", moveDestinationDir, targetFile, moveDestinationDir);
+
+		system(makedir_cp);	//mkdir & mv file to tmp-dir
+
+		//Remove emptied dir
+		char existdir[1024];
+		sprintf(existdir, "%s%s", g_file_get_path (window->priv->last_extraction_destination), result);
+		while(1){
+			char ls[1024];
+			sprintf(ls, "ls %s", existdir);
+			printf("%s\n", ls);
+			char buf[512];
+			FILE *fp = popen(ls, "r");  // Check exist file
+			if(fgets(buf,sizeof(buf), fp)==NULL) { // Moved All file
+				char rmexistdir[1024];
+				sprintf(rmexistdir, "rm -rf %s", existdir);
+				system(rmexistdir);
+			}
+			else
+				break;
+			existdir[(int)strrchr(existdir, '/')-(int)existdir] = 0;
+		}
+	}
+	sprintf(find, "find %s", targetdir);
+	fp1 = popen(find, "r");
+
+	while (fgets(buf1,256,fp1)){
+		changed=0;
+		for(i=0; buf1[i] != 0 ; i++){
+			if (buf1[i] == '\n'){
+				buf1[i]=0;
+				break;
+			}
+		}
+        sprintf(iconv, "echo $(echo %s | iconv -c -f UTF-8 -t ISO-8859-1) | iconv -c -f EUC-KR -t UTF-8", buf1);
+
+		sprintf(file, "file %s", buf1);
+		fp2 = popen(file, "r");
+		fgets(buf2, 256, fp2); // buf2 is check dir
+		for(i=0;buf2[i]!=0;i++)
+			if(buf2[i]==10)
+				buf2[i]=NULL;
+		dir=0;
+		if(strstr(buf2,"directory"))
+			dir=1;
+
+
+		fp3 = popen(iconv, "r");
+		fgets(buf3, 256, fp3);  //buf3 is dir name or file name .. changed
+		for(i=0;buf3[i]!=0;i++)
+			if(buf3[i]==10)
+				buf3[i]=NULL;
+		delSchar(buf3, "_tmpext");
+		if(dir){
+			sprintf(changedir, "mkdir -p %s ", buf3);
+			system(changedir);
+		}
+		if (!dir) {
+			sprintf(iconv,"iconv -c -f EUC-KR -t UTF-8 %s > %s", buf1, buf3);
+			system(iconv);
+		}
+	}
+	char* rm[256];
+	sprintf(rm, "rm -rf %s", targetdir);
+	system(rm);
+	fclose(fp1);
+	fclose(fp2);
+	fclose(fp3);
 }
 
 
